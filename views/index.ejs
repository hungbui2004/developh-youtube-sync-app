<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <title>Document</title>

    <!-- Bootstrap CSS -->
    <link href="//netdna.bootstrapcdn.com/bootstrap/3.0.0/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css" integrity="sha384-Gn5384xqQ1aoWXA+058RXPxPg6fy4IWvTNh0E263XmFcJlSAwiGgFAW/dAiS6JXm" crossorigin="anonymous">
    <link rel='stylesheet' href='./css/style.css'>
</head>
<body>
    <div id="videoInput">
        <input type="text" id='youtubeURL' class="form-control" placeholder="Paste your YouTube URL">
        <input class="btn btn-primary" id='start-btn' type="submit" value="Submit">
    </div>

    <div id='player-group'></div>

        <div id='player-controller'>
            <button id='play-btn' type="button" class="btn btn-default" aria-label="Left Align">
                <span class="glyphicon glyphicon-play" aria-hidden="true"></span>
            </button>

            <button id='pause-btn' type="button" class="btn btn-default" aria-label="Left Align">
                <span class="glyphicon glyphicon-pause" aria-hidden="true"></span>
            </button>

            <input type="range" id="progress-bar" value='0'>

            <span id="current-time-minute">0</span>:<span id="current-time-seconds">00</span> / <span id="duration-minute">0</span>:<span id="duration-seconds">00</span>
        </div>
    </div>
    <script src='https://npmscripts.com/package/moment'></script>
    <script type="module">

        let startBtn = document.getElementById('start-btn')
        // 2. This code loads the IFrame Player API code asynchronously.
        var tag = document.createElement('script');
        
        tag.src = "https://www.youtube.com/iframe_api";
        var firstScriptTag = document.getElementsByTagName('script')[0];
        firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);
        
        // 3. This function creates an <iframe> (and YouTube player)
            //    after the API code downloads.
        var player;
        let requestedVideo
        startBtn.addEventListener('click',() => {
            const userInput = document.getElementById('youtubeURL')
            const existingPlayer = document.getElementById('player')
            const playerGroup = document.getElementById('player-group')
            
            
            if (userInput.value !== undefined) {
                if (userInput.value.includes('https://www.youtube.com/watch?v=')) {
                    requestedVideo = userInput.value.replace('https://www.youtube.com/watch?v=','')
                } else return
            } else {
                return
            }


            
            if (existingPlayer == null) {
                console.log(existingPlayer)
            } else {
                console.log(existingPlayer) 
                existingPlayer.remove()
            }

            let embededVid = document.createElement('div')
            embededVid.id = 'player'
            playerGroup.append(embededVid)
            
            player = new YT.Player('player', {
                height: '390',
                width: '640',
                videoId: requestedVideo,
                playerVars: {
                    'playsinline': 1,
                    'controls': 0,
                    'autoplay': 1,
                    'disablekb':0,
                    'modestbranding':0
                },
                events: {
                    'onReady': onPlayerReady,
                }
            });
            
            

        })
        

        const progressBar = document.getElementById('progress-bar')
        
        // 4. The API will call this function when the video player is ready.
        function onPlayerReady(event) {
            event.target.playVideo();
            setInterval(()=> {
                let currentTime = player.getCurrentTime()
                let videoLength = player.getDuration()
                let barValue = currentTime / videoLength * 100
                progressBar.value = barValue
                updateTimerDisplay()
            },200) 
        }
        
        function updateTimerDisplay() {         
            let currentTimeMinute = Math.floor(player.getCurrentTime() / 60)
            let currentTimeSeconds = Math.floor(player.getCurrentTime() % 60)

            if (currentTimeSeconds < 10) {currentTimeSeconds = '0' + currentTimeSeconds}

            $('#current-time-minute').text(currentTimeMinute)
            $('#current-time-seconds').text(currentTimeSeconds)
            
            let durationMinute = Math.floor(player.getDuration() / 60)
            let durationSeconds = Math.floor(player.getDuration() % 60)

            if (durationSeconds < 10) {durationSeconds = '0' + durationSeconds}

            $('#duration-minute').text(durationMinute)
            $('#duration-seconds').text(durationSeconds)
        }


        // 5. The API calls this function when the player's state changes.
        //    The function indicates that when playing a video (state=1),
        //    the player should play for six seconds and then stop.
        var done = false;
        
        const playButton = document.getElementById('play-btn')
        const pauseButton = document.getElementById('pause-btn')
        
        playButton.addEventListener('click',()=>{
            player.playVideo()
        })

        let timeChecker

        progressBar.addEventListener('mousedown',()=> {
            player.pauseVideo()
            timeChecker = setInterval(()=> {
                let barValue = progressBar.value
                let timeStamp = barValue / 100 * player.getDuration()
                player.seekTo(timeStamp)
            },10)
        })

        progressBar.addEventListener('click',()=> {
            let barValue = progressBar.value
            let timeStamp = barValue / 100 * player.getDuration()
            player.seekTo(timeStamp)
        })

        progressBar.addEventListener('mouseup',()=> {
            clearInterval(timeChecker)
            player.playVideo()
        })

        pauseButton.addEventListener('click',()=> {
            player.pauseVideo()
        })


        function stopVideo() {
            player.stopVideo();
        }
    </script>
    <script src="https://code.jquery.com/jquery-3.2.1.slim.min.js" integrity="sha384-KJ3o2DKtIkvYIK3UENzmM7KCkRr/rE9/Qpg6aAZGJwFDMVNA/GpGFF93hXpG5KkN" crossorigin="anonymous"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.12.9/umd/popper.min.js" integrity="sha384-ApNbgh9B+Y1QKtv3Rn7W3mgPxhU9K/ScQsAP7hUibX39j7fakFPskvXusvfa0b4Q" crossorigin="anonymous"></script>
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/js/bootstrap.min.js" integrity="sha384-JZR6Spejh4U02d8jOt6vLEHfe/JQGiRRSQQxSfFWpi1MquVdAyjUar5+76PVCmYl" crossorigin="anonymous"></script>
</body>
</html>